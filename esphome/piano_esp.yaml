esphome:
  name: piano_esp
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Piano Esp Fallback Hotspot"
    password: !secret wifi_password

captive_portal:

# Enable logging
logger:
  hardware_uart: UART0_SWAP

# Enable Home Assistant API
api:

ota:

binary_sensor:
  # Basic status
  - platform: status
    name: "Piano ESP Status"
  - platform: gpio
    pin:
      number: GPIO10
      mode: INPUT
      inverted: True
    name: "Piano Power Button"
    on_press:
      - switch.toggle: core
      - switch.toggle: speakers
  - platform: gpio
    pin:
      number: GPIO03
      mode: INPUT
      inverted: True
    name: "Piano Keylid"
    id: keylid
    on_press:
      if:
        condition:
          binary_sensor.is_on: speakerswitch
        then:
          - switch.turn_on: speakers
          - switch.turn_on: core
        else:
          - switch.turn_on: core
    on_release:
      - switch.turn_off: speakers
      - delay: 30s
      - switch.turn_off: core
    filters:
      - delayed_on_off: 500ms
  - platform: gpio
    pin:
      number: GPIO01
      mode: INPUT_PULLUP
    name: "Piano Speaker Switch"
    id: speakerswitch
    on_press:
      - switch.turn_on: speakers
    on_release:
      - switch.turn_off: speakers
    filters:
      - delayed_on_off: 100ms

switch:
  - platform: gpio
    name: "Piano Core"
    pin: GPIO12
    id: core
  - platform: gpio
    name: "Piano Speakers"
    pin: GPIO5
    id: speakers
  - platform: template
    name: "Piano Candles"
    optimistic: true
    turn_on_action:
    - remote_transmitter.transmit_nec:
        address: 0x00FF
        command: 0x807F
    turn_off_action:
    - remote_transmitter.transmit_nec:
        address: 0x00FF
        command: 0x906F
      

remote_transmitter:
  pin: GPIO9
  carrier_duty_percent: 50%

